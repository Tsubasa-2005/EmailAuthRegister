// Code generated by ogen, DO NOT EDIT.

package api

import (
	"time"

	"github.com/google/uuid"
)

type BadRequest struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *BadRequest) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *BadRequest) SetMessage(val string) {
	s.Message = val
}

func (*BadRequest) completeUserRegistrationRes() {}

type BearerAuth struct {
	Token string
}

// GetToken returns the value of Token.
func (s *BearerAuth) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *BearerAuth) SetToken(val string) {
	s.Token = val
}

type CompleteUserRegistrationOK struct {
	Token string `json:"token"`
}

// GetToken returns the value of Token.
func (s *CompleteUserRegistrationOK) GetToken() string {
	return s.Token
}

// SetToken sets the value of Token.
func (s *CompleteUserRegistrationOK) SetToken(val string) {
	s.Token = val
}

func (*CompleteUserRegistrationOK) completeUserRegistrationRes() {}

type CompleteUserRegistrationReq struct {
	Token    uuid.UUID `json:"token"`
	Email    string    `json:"email"`
	Name     string    `json:"name"`
	Password string    `json:"password"`
}

// GetToken returns the value of Token.
func (s *CompleteUserRegistrationReq) GetToken() uuid.UUID {
	return s.Token
}

// GetEmail returns the value of Email.
func (s *CompleteUserRegistrationReq) GetEmail() string {
	return s.Email
}

// GetName returns the value of Name.
func (s *CompleteUserRegistrationReq) GetName() string {
	return s.Name
}

// GetPassword returns the value of Password.
func (s *CompleteUserRegistrationReq) GetPassword() string {
	return s.Password
}

// SetToken sets the value of Token.
func (s *CompleteUserRegistrationReq) SetToken(val uuid.UUID) {
	s.Token = val
}

// SetEmail sets the value of Email.
func (s *CompleteUserRegistrationReq) SetEmail(val string) {
	s.Email = val
}

// SetName sets the value of Name.
func (s *CompleteUserRegistrationReq) SetName(val string) {
	s.Name = val
}

// SetPassword sets the value of Password.
func (s *CompleteUserRegistrationReq) SetPassword(val string) {
	s.Password = val
}

type InternalServerError struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *InternalServerError) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *InternalServerError) SetMessage(val string) {
	s.Message = val
}

func (*InternalServerError) sendEmailVerificationRes() {}

// NewOptDateTime returns new OptDateTime with value set to v.
func NewOptDateTime(v time.Time) OptDateTime {
	return OptDateTime{
		Value: v,
		Set:   true,
	}
}

// OptDateTime is optional time.Time.
type OptDateTime struct {
	Value time.Time
	Set   bool
}

// IsSet returns true if OptDateTime was set.
func (o OptDateTime) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptDateTime) Reset() {
	var v time.Time
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptDateTime) SetTo(v time.Time) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptDateTime) Get() (v time.Time, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptDateTime) Or(d time.Time) time.Time {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type PingOK struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *PingOK) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *PingOK) SetMessage(val string) {
	s.Message = val
}

// SendEmailVerificationOK is response for SendEmailVerification operation.
type SendEmailVerificationOK struct{}

func (*SendEmailVerificationOK) sendEmailVerificationRes() {}

type SendEmailVerificationReq struct {
	Email string `json:"email"`
}

// GetEmail returns the value of Email.
func (s *SendEmailVerificationReq) GetEmail() string {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *SendEmailVerificationReq) SetEmail(val string) {
	s.Email = val
}

type Unauthorized struct {
	Message string `json:"message"`
}

// GetMessage returns the value of Message.
func (s *Unauthorized) GetMessage() string {
	return s.Message
}

// SetMessage sets the value of Message.
func (s *Unauthorized) SetMessage(val string) {
	s.Message = val
}

func (*Unauthorized) completeUserRegistrationRes() {}
func (*Unauthorized) verifyEmailRes()              {}

// Ref: #/components/schemas/user
type User struct {
	// Unique identifier for the user.
	ID int64 `json:"id"`
	// Email address of the user.
	Email string `json:"email"`
	// Encrypted password of the user.
	Password string `json:"password"`
	// Full name of the user.
	Name string `json:"name"`
	// User creation timestamp.
	CreatedAt OptDateTime `json:"created_at"`
	// Last profile update timestamp.
	UpdatedAt OptDateTime `json:"updated_at"`
	// Soft-delete timestamp if the user is removed.
	DeletedAt OptDateTime `json:"deleted_at"`
}

// GetID returns the value of ID.
func (s *User) GetID() int64 {
	return s.ID
}

// GetEmail returns the value of Email.
func (s *User) GetEmail() string {
	return s.Email
}

// GetPassword returns the value of Password.
func (s *User) GetPassword() string {
	return s.Password
}

// GetName returns the value of Name.
func (s *User) GetName() string {
	return s.Name
}

// GetCreatedAt returns the value of CreatedAt.
func (s *User) GetCreatedAt() OptDateTime {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *User) GetUpdatedAt() OptDateTime {
	return s.UpdatedAt
}

// GetDeletedAt returns the value of DeletedAt.
func (s *User) GetDeletedAt() OptDateTime {
	return s.DeletedAt
}

// SetID sets the value of ID.
func (s *User) SetID(val int64) {
	s.ID = val
}

// SetEmail sets the value of Email.
func (s *User) SetEmail(val string) {
	s.Email = val
}

// SetPassword sets the value of Password.
func (s *User) SetPassword(val string) {
	s.Password = val
}

// SetName sets the value of Name.
func (s *User) SetName(val string) {
	s.Name = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *User) SetCreatedAt(val OptDateTime) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *User) SetUpdatedAt(val OptDateTime) {
	s.UpdatedAt = val
}

// SetDeletedAt sets the value of DeletedAt.
func (s *User) SetDeletedAt(val OptDateTime) {
	s.DeletedAt = val
}

type VerifyEmailOK struct {
	Email string `json:"email"`
}

// GetEmail returns the value of Email.
func (s *VerifyEmailOK) GetEmail() string {
	return s.Email
}

// SetEmail sets the value of Email.
func (s *VerifyEmailOK) SetEmail(val string) {
	s.Email = val
}

func (*VerifyEmailOK) verifyEmailRes() {}

type VerifyEmailReq struct {
	Token uuid.UUID `json:"token"`
}

// GetToken returns the value of Token.
func (s *VerifyEmailReq) GetToken() uuid.UUID {
	return s.Token
}

// SetToken sets the value of Token.
func (s *VerifyEmailReq) SetToken(val uuid.UUID) {
	s.Token = val
}
